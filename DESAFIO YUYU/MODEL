*&---------------------------------------------------------------------*
*& Include          YDESAFIOYUYU_BH_IN_MODEL
*&---------------------------------------------------------------------*

CLASS report_model DEFINITION.

  PUBLIC SECTION.

    TYPE-POOLS: slis.

    TYPES: BEGIN OF ty_table,
             lifnr TYPE ekko-lifnr,
             ebeln TYPE ekpo-ebeln,
             ebelp TYPE ekpo-ebelp,
           END OF ty_table.

    TYPES: BEGIN OF lt_data,
             lifnr TYPE ekko-lifnr,
             ebeln TYPE ekpo-ebeln,
             ebelp TYPE ekpo-ebelp,
           END OF lt_data.

    TYPES: BEGIN OF ty_saida,
             aedat TYPE ekko-aedat,
             ebeln TYPE ekpo-ebeln,
             ebelp TYPE ekpo-ebelp,
             werks TYPE ekpo-werks,
             lgort TYPE ekpo-lgort,
             meins TYPE ekpo-meins,
             menge TYPE ekpo-menge,
             matnr TYPE ekpo-matnr,
             bukrs TYPE ekko-bukrs,
           END OF ty_saida.

    DATA: it_table   TYPE TABLE OF ty_table,
          st_table   TYPE ty_table,
          tree_table TYPE STANDARD TABLE OF ty_table,
          it_saida   TYPE TABLE OF ty_saida,
          st_saida   TYPE ty_saida,
          wa_saida   TYPE lt_data.

    DATA: lo_nodes TYPE REF TO cl_salv_nodes,
          lo_node  TYPE REF TO cl_salv_node,
          lt_nodes TYPE salv_t_nodes,
          lv_set   TYPE xfeld,
          lv_value TYPE salv_de_constant.

    DATA: valida TYPE abap_bool.
    DATA: lt_ret TYPE STANDARD TABLE OF bapiret2,
          ls_ret TYPE bapiret2.

    DATA: ls_mmdochdr TYPE bapi2017_gm_head_01,
          lt_gm       TYPE STANDARD TABLE OF bapi2017_gm_item_create,
          ls_gm       TYPE bapi2017_gm_item_create,
          ls_mrhdr    TYPE bapi_incinv_create_header,
          lt_gmr      TYPE STANDARD TABLE OF bapi_incinv_create_item,
          ls_gmr      TYPE bapi_incinv_create_item.

    DATA: lt_matdoc  TYPE bapi2017_gm_head_ret-mat_doc,
          lt_docyear TYPE bapi2017_gm_head_ret-doc_year,
          "lt_gm_ret   TYPE STANDARD TABLE OF bapi2017_gm_head_02,
          ls_gm_ret  TYPE bapi2017_gm_head_02.

    METHODS: start_of_selection,
      select_dados,
      init_modify_met,
      validate_miro,
      validate_migo,
      criar_migo,
      criar_miro,
      estornar_migo,
      estornar_miro,
      added_function   FOR EVENT added_function OF cl_salv_events_tree
        IMPORTING e_salv_function,
      mensagens IMPORTING valor TYPE c.

ENDCLASS.

CLASS report_model IMPLEMENTATION.

  METHOD start_of_selection.

    me->select_dados( ).

  ENDMETHOD.

  METHOD select_dados.

    SELECT ekko~aedat, ekpo~ebeln, ekpo~ebelp, ekpo~werks, ekpo~lgort, ekpo~meins, ekpo~menge, ekpo~matnr, ekko~bukrs
      FROM ekpo
      INNER JOIN ekko ON ekko~ebeln = ekpo~ebeln
      WHERE ekko~aedat IN @fil_per
      AND   ekpo~ebelp IN @fil_ped
      AND   ekpo~werks <> ''
      AND   ekpo~lgort <> ''
      AND   ekko~lifnr <> ''
      AND   ekko~bukrs <> ''
      INTO CORRESPONDING FIELDS OF TABLE @it_saida.

    SELECT ekpo~ebeln, ekpo~ebelp, ekko~lifnr
      FROM ekpo
      INNER JOIN ekko ON ekko~ebeln = ekpo~ebeln
      WHERE ekko~aedat IN @fil_per
      AND   ekpo~ebelp IN @fil_ped
      AND   ekpo~werks <> ''
      AND   ekpo~lgort <> ''
      AND   ekko~lifnr <> ''
      INTO CORRESPONDING FIELDS OF TABLE @it_table UP TO 100 ROWS.

  ENDMETHOD.

  METHOD init_modify_met.

*    me->validate_migo( ).
*    me->validate_miro( ).
*    me->criar_migo( ).
*    me->criar_miro( ).
*    me->modify_reg( ).

  ENDMETHOD.

  METHOD validate_miro.

    DATA: it_validate TYPE STANDARD TABLE OF mseg,
          pedido      TYPE ekpo-ebeln.

    pedido = wa_saida-ebeln.

    SELECT mseg~matnr, mseg~werks, mseg~lgort
      FROM mseg
      INNER JOIN mkpf ON mseg~mblnr = mkpf~mblnr
      WHERE mseg~ebeln = @pedido               "Substitua por seu número de pedido
       AND mseg~bwart = '101'                 "Filtra por movimento de recebimento
       AND NOT EXISTS (
         SELECT mseg~matnr
           FROM mseg
          WHERE mseg~mblnr = mseg~mblnr
            AND mseg~bwart = '102' )
      INTO CORRESPONDING FIELDS OF TABLE @it_validate.

  ENDMETHOD.

  METHOD validate_migo.

  ENDMETHOD.

  METHOD estornar_migo.
    DATA: valor   TYPE ekpo-ebeln,
          v_count TYPE i.

    DATA(selected_line) = salv_tree->get_selections( )->get_selected_nodes( ).

    IF selected_line IS INITIAL.
      me->mensagens( 'E' ).
    ELSE.

      DATA(linha) = selected_line[ 1 ].
      DATA(data) = linha-node->get_data_row( ).

      FIELD-SYMBOLS: <line> TYPE lt_data.
      ASSIGN data->* TO <line>.

      wa_saida = <line>.

*    CLEAR: ls_gm_ret.
*
*    READ TABLE it_saida INTO st_saida INDEX row.
*    LOOP AT it_saida INTO st_saida.
*      IF st_saida-matnr = valorm AND st_saida-aedat = valord.
*        ls_gm_ret-mat_doc = st_saida-matnr.
*        ls_gm_ret-doc_year = st_saida-aedat(4).
*        APPEND ls_gm_ret TO lt_gm_ret.
*      ELSE.
*        CONTINUE.
*      ENDIF.
*    ENDLOOP.

      CALL FUNCTION 'BAPI_GOODSMVT_CANCEL'
        EXPORTING
          materialdocument = ls_gm_ret-mat_doc
          matdocumentyear  = ls_gm_ret-doc_year
        TABLES
          return           = lt_ret.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

      READ TABLE lt_ret INTO ls_ret INDEX 1.
      DATA(mensagem) = ls_ret-message.
      MESSAGE mensagem TYPE 'I'.

    ENDIF.

  ENDMETHOD.

  METHOD estornar_miro.
*    UTILIZE O SHDB, TRANSAÇÃO MR8M
  ENDMETHOD.

  METHOD criar_migo.
    DATA: valor   TYPE ekpo-ebeln.

    DATA(selected_line) = salv_tree->get_selections( )->get_selected_nodes( ).

    IF selected_line IS INITIAL.
      me->mensagens( 'E' ).
    ELSE.
      DATA(linha) = selected_line[ 1 ].
      DATA(data) = linha-node->get_data_row( ).

      FIELD-SYMBOLS: <line> TYPE lt_data.
      ASSIGN data->* TO <line>.

      wa_saida = <line>.

      valor = wa_saida-ebeln.

      LOOP AT it_saida INTO st_saida.
        IF st_saida-ebeln = valor.
          ls_gm-po_item    = st_saida-ebelp.
          ls_gm-ref_doc    = st_saida-ebeln.
          ls_gm-ref_doc_it = st_saida-ebelp.
          ls_gm-entry_qnt  = st_saida-menge.
          ls_gm-entry_uom  = st_saida-meins.
          ls_gm-stge_loc   = st_saida-lgort.
          ls_gm-plant      = st_saida-werks.
          ls_gm-material   = st_saida-matnr.
          ls_gm-po_number  = valor.
          ls_gm-move_type  = '101'.
          ls_gm-mvt_ind    = 'B'.
          APPEND ls_gm TO lt_gm.
          EXIT.
        ELSE.
          CONTINUE.
        ENDIF.
      ENDLOOP.

      ls_mmdochdr-pstng_date = '20240201'.
      ls_mmdochdr-doc_date   = '20240201'.
      ls_mmdochdr-pr_uname   = sy-uname.

      CALL FUNCTION 'BAPI_GOODSMVT_CREATE'
        EXPORTING
          goodsmvt_header  = ls_mmdochdr
          goodsmvt_code    = '01'
          testrun          = 'X'
        IMPORTING
          materialdocument = lt_matdoc
          matdocumentyear  = lt_docyear
        TABLES
          goodsmvt_item    = lt_gm
          return           = lt_ret.

      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

      READ TABLE lt_ret INTO ls_ret INDEX 1.
      DATA(mensagem) = ls_ret-message.
      MESSAGE mensagem TYPE 'I'.

    ENDIF.

  ENDMETHOD.

  METHOD criar_miro.
    CLEAR: valida, lt_ret.

    DATA: valor   TYPE ekpo-ebeln,
          v_count TYPE i.

    DATA(selected_line) = salv_tree->get_selections( )->get_selected_nodes( ).

    IF selected_line IS INITIAL.
      me->mensagens( 'E' ).
    ELSE.
      DATA(linha) = selected_line[ 1 ].
      DATA(data) = linha-node->get_data_row( ).

      FIELD-SYMBOLS: <line> TYPE lt_data.
      ASSIGN data->* TO <line>.

      wa_saida = <line>.

      valor = wa_saida-ebeln.
*    me->validate_miro( ).
      LOOP AT it_saida INTO st_saida.
        IF st_saida-ebeln = valor.
          ls_gmr-po_number = st_saida-ebeln.
          ls_gmr-po_item = st_saida-ebelp.
          ls_gmr-quantity = st_saida-menge.
*    ls_gmr-FREIGHT_VEN = wa_saida-lifnr. "talvez
          ls_gmr-po_unit = st_saida-meins.
          ls_gmr-final_inv = 'X'.
          ls_gmr-invoice_doc_item = '1'.
          ls_gmr-ref_doc_year = '2024'.
          ls_mrhdr-comp_code = st_saida-bukrs.
          APPEND ls_gmr TO lt_gmr.
        ENDIF.
      ENDLOOP.

      ls_mrhdr-invoice_ind = 'X'.
*      ls_mrhdr-doc_type = ' '.
      ls_mrhdr-doc_date = '20240201'.
      ls_mrhdr-pstng_date = '20240201'.
      ls_mrhdr-currency = 'BRL'.

      CALL FUNCTION 'BAPI_INCOMINGINVOICE_CREATE'
        EXPORTING
          headerdata = ls_mrhdr
        TABLES
          itemdata   = lt_gmr
          return     = lt_ret.

      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.

      READ TABLE lt_ret INTO ls_ret INDEX 1.
      DATA(mensagem) = ls_ret-message.
      MESSAGE mensagem TYPE 'I'.
    ENDIF.

  ENDMETHOD.

  METHOD added_function.

  lo_nodes = salv_tree->get_nodes( ).

    CASE e_salv_function.
      WHEN 'MIGO1'.
        me->criar_migo( ).
      WHEN 'MIRO1'.
        me->criar_miro( ).
      WHEN 'MIGO2'.
        me->estornar_migo( ).
      WHEN 'MIRO2'.
        me->estornar_miro( ).
      WHEN 'EXPAND'.
        lo_nodes->expand_all( ).
      WHEN 'COLAP'.
        lo_nodes->collapse_all( ).
      WHEN 'BACK'.
        LEAVE TO SCREEN 0.
      WHEN OTHERS.
    ENDCASE.

  ENDMETHOD.

  METHOD mensagens.

    CASE valor.
      WHEN 'A'.
        MESSAGE 'Sucesso!' TYPE 'I' DISPLAY LIKE 'S'.
      WHEN 'E'.
        MESSAGE 'Erro!' TYPE 'I' DISPLAY LIKE 'E'.
      WHEN OTHERS.

    ENDCASE.

  ENDMETHOD.

ENDCLASS.