*&---------------------------------------------------------------------*
*& Include          YBH_RP_03_IN_MODEL
*&---------------------------------------------------------------------*

*TABLES: kna1, vbak, vbap.

CLASS report_model DEFINITION.

  PUBLIC SECTION.

    TYPES: BEGIN OF ty_table,
             lifnr TYPE vbpa-lifnr,
             brgew TYPE vbap-brgew,
             netwr TYPE vbap-netwr,
             erdat TYPE vbak-erdat,
             data  TYPE d,
             mes   TYPE c LENGTH 8,
             ano   TYPE c LENGTH 8,
             color TYPE lvc_t_scol,
           END OF ty_table.

    DATA: p_month TYPE string,
          p_year  TYPE string.

    DATA: it_table TYPE TABLE OF ty_table,
          st_table TYPE ty_table.

    METHODS: start_of_selection,
             get_pedido,
             init_modify_met,
             validate_screen_mod,
             modify_reg,
             loop_data,
             on_double_click FOR EVENT double_click OF cl_salv_events_table IMPORTING row
                                                                               column.

ENDCLASS.

CLASS report_model IMPLEMENTATION.

  METHOD start_of_selection.

    me->get_pedido( ).

  ENDMETHOD.

  METHOD get_pedido.

*    DO 10 TIMES.
*
*      st_table-lifnr = 'Roberto'.
*      st_table-brgew = '1000'.
*      st_table-netwr = '1000'.
*      st_table-erdat  = '20240710'.
*      append st_table to it_table.
*
*    ENDDO.

    SELECT vbpa~lifnr, vbap~brgew, vbap~netwr, vbak~erdat
      FROM vbpa
      INNER JOIN vbap  ON vbap~vbeln = vbpa~vbeln
      INNER JOIN vbak  ON vbak~vbeln = vbpa~vbeln
      WHERE vbpa~lifnr IN @fil_vend
      AND   vbak~erdat IN @fil_dat
      INTO CORRESPONDING FIELDS OF TABLE @it_table.

    me->loop_data( ).

  ENDMETHOD.

  METHOD init_modify_met.

    me->validate_screen_mod( ).
    me->modify_reg( ).

  ENDMETHOD.

  METHOD validate_screen_mod.

*    IF mod_num IS INITIAL.
*      MESSAGE 'Numero Pedido Obrigatorio' TYPE 'E'.
*    ENDIF.
*
*    IF mod_dat IS INITIAL.
*      MESSAGE 'Data Pedido Obrigatorio' TYPE 'E'.
*    ENDIF.

  ENDMETHOD.

  METHOD modify_reg.

*    DATA: pedido_cab TYPE nome_tabela.
*
*    pedido_cab-numero_pedido = mod_num.
*    pedido_cab-data_pedido = mod_dat.

*    MODIFY nome_tabela FROM pedido_cab.
*
*    MESSAGE 'Pedido Salvo/Alterado com Sucesso!' TYPE 'S'.

  ENDMETHOD.

  METHOD loop_data.

    DATA: date(8).

    LOOP AT it_table INTO st_table.

      READ TABLE it_table INTO st_table INDEX sy-tabix.

      st_table-mes = st_table-erdat+4(2).
      st_table-ano = st_table-erdat(4).
      MODIFY it_table FROM st_table.

    ENDLOOP.

  ENDMETHOD.

  METHOD on_double_click.

    READ TABLE me->it_table INTO me->st_table INDEX row.

*    SET PARAMETER ID 'LIF' FIELD st_table-lifnr.
*    CALL TRANSACTION 'XK03' AND SKIP FIRST SCREEN.

  ENDMETHOD.


ENDCLASS.